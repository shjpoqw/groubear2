<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="messengerMapper">
	<resultMap id="empMsgResultSet" type="MemberMsg">
		<id property="empNO" column="EMP_NO" />
		<result property="empName" column="EMP_NAME" />
		<result property="stateMessageNo" column="STATE_MESSAGE_NO" />
		<result property="message" column="MESSAGE" />
		<result property="originName" column="ORIGIN_NAME" />
		<result property="changeName" column="CHANGE_NAME" />
	</resultMap>

	<resultMap id="stateMessageResultSet" type="StateMessage">
		<id property="stateMessageNo" column="STATE_MESSAGE_NO" />
		<result property="message" column="MESSAGE" />
		<result property="empNO" column="EMP_NO" />
		<result property="originName" column="ORIGIN_NAME" />
		<result property="changeName" column="CHANGE_NAME" />
	</resultMap>


	<resultMap id="chatResultSet" type="Chat">
		<id property="chatNo" column="CHAT_NO" />
		<result property="message" column="MESSAGE" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="empNO" column="EMP_NO" />
		<result property="toEmpNo" column="TO_EMP_NO" />
		<result property="chatread" column="CHATREAD" />
	</resultMap>

	<resultMap id="chatViewResultSet" type="ChatView">
		<id property="chatNo" column="CHAT_NO" />
		<result property="message" column="MESSAGE" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="empNO" column="EMP_NO" />
		<result property="toEmpNo" column="TO_EMP_NO" />
		<result property="chatread" column="CHATREAD" />
		<result property="empName" column="EMP_NAME" />
		<result property="toEmpName" column="TO_EMP_NAME" />
		<result property="changeName" column="CHANGE_NAME" />
		<result property="toChangeName" column="TO_CHANGE_NAEE" />
	</resultMap>

	<resultMap id="chatReadResultSet" type="chatRead">
		<id property="empNO" column="EMP_NO" />
		<result property="toEmpNo" column="TO_EMP_NO" />
		<result property="count" column="COUNT" />
	</resultMap>

	<select id="memberList" parameterType="hashmap"
		resultMap="empMsgResultSet">
		SELECT *
		FROM EMPLOYEE_MSG
		WHERE EMP_NAME LIKE '${query}'
		ORDER BY EMP_NAME
	</select>
	<select id="loginMember" parameterType="_int"
		resultMap="empMsgResultSet">
		SELECT *
		FROM EMPLOYEE_MSG
		WHERE EMP_NO = ${empNO}
	</select>
	<update id="updateStateMessage" parameterType="StateMessage">
		UPDATE
		STATE_MESSAGE
		SET MESSAGE = '${message}'
		WHERE EMP_NO = ${empNO}
	</update>

	<insert id="insertStateMessage" parameterType="StateMessage">
		INSERT INTO
		STATE_MESSAGE
		VALUES(STATE_MESSAGE_SEQ.NEXTVAL, #{message},#{empNO})
	</insert>



	<select id="selectEmp" parameterType="_int"
		resultMap="empMsgResultSet">
		SELECT *
		FROM EMPLOYEE_MSG
		WHERE EMP_NO = #{toEmpNo}
	</select>

	<select id="getChatListById" parameterType="hashmap"
		resultMap="chatViewResultSet">
		SELECT *
		FROM CHAT_VIEW WHERE(EMP_NO = #{empNO} AND TO_EMP_NO
		=#{toEmpNo})
		OR (TO_EMP_NO =#{toEmpNo} AND EMP_NO = #{empNO})
		AND
		CHAT_NO > #{chatNo}
		ORDER BY CREATE_DATE
	</select>

	<select id="getChatListByRecent" parameterType="hashmap"
		resultMap="chatViewResultSet">
		SELECT *
		FROM CHAT_VIEW WHERE(EMP_NO = #{empNO} AND TO_EMP_NO
		=#{toEmpNo})
		OR (EMP_NO =#{toEmpNo} AND TO_EMP_NO = #{empNO})
		AND
		CHAT_NO > (SELECT MAX(CHAT_NO) - #{number} FROM CHAT_VIEW
		WHERE(EMP_NO
		= #{empNO} AND TO_EMP_NO =#{toEmpNo}) OR (EMP_NO = #{toEmpNo} AND
		TO_EMP_NO =#{empNO}))
		ORDER BY CREATE_DATE
	</select>

	<insert id="submit" parameterType="hashmap">
		INSERT INTO CHAT
		VALUES(CHAT_SEQ.NEXTVAL, #{message}, DEFAULT, #{empNO}, #{toEmpNo},
		DEFAULT)
	</insert>

	<update id="readChat" parameterType="hashmap">
		UPDATE CHAT
		SET CHATREAD = 1
		WHERE (EMP_NO = #{toEmpNo} AND TO_EMP_NO = #{empNO})
	</update>

	<select id="getUnreadChat" parameterType="_int"
		resultMap="chatReadResultSet">
		SELECT A.EMP_NO,B.TO_EMP_NO, COUNT(*) COUNT
		FROM EMPLOYEE_MSG
		A
		LEFT JOIN (SELECT * FROM CHAT WHERE TO_EMP_NO = #{empNO}) B ON B.EMP_NO =
		A.EMP_NO
		WHERE B.CHATREAD = 0
		GROUP BY A.EMP_NO, B.TO_EMP_NO
	</select>

	<select id="getChatListAllByRecent" parameterType="hashmap"
		resultMap="chatViewResultSet">
		SELECT *
		FROM CHAT_VIEW WHERE(EMP_NO = #{empNO} AND TO_EMP_NO
		=#{toEmpNo})
		OR (EMP_NO =#{toEmpNo} AND TO_EMP_NO = #{empNO})
		OR (EMP_NO
		= #{toEmpNo} AND
		TO_EMP_NO =#{empNO})
		ORDER BY CREATE_DATE
	</select>
	
	<select id="getChatList" parameterType="_int"
		resultType="_int" >
		SELECT *
		FROM CHAT_VIEW
		WHERE EMP_NO = #{empNO}
		
	</select>
</mapper>

